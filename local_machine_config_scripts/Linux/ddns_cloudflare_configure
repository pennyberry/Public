#!/bin/bash

#copy this and env-vars.env to /etc/cron.hourly/ and make it executable
# cp /home/joe/Public/local_machine_config_scripts/Linux/ddns_cloudflare_configure.sh /etc/cron.hourly/
# cp /home/joe/Public/local_machine_config_scripts/Linux/env-vars.env /etc/cron.hourly/
# chmod +x /etc/cron.hourly/ddns_cloudflare_configure
# chmod +x /etc/cron.hourly/env-vars.env

#This script will update the Cloudflare DNS record with the current external IP address of the machine it is running on.

# The env-vars.env file should look like this:
# mydomain="yourdomain.com"
# myhostname="subdomain"
# CLOUDFLARE_API_KEY="REDACTED"
# CLOUDFLARE_EMAIL="REDACTED"
# ZONE_ID="REDACTED"
# DNS_RECORD_ID="REDACTED"

#find your zone id by running the following commands.
# cloudflarezones=`curl -s https://api.cloudflare.com/client/v4/zones \
#     -H "Authorization: Bearer ${CLOUDFLARE_API_KEY}"`
# echo -e "ID\tNAME"
# echo $cloudflarezones | jq -r '.result[] | [.id, .name] | @tsv'

#find your dns record id by running the following commands.
# cloudflarednsrecords=`curl -s https://api.cloudflare.com/client/v4/zones/$ZONE_ID/dns_records \
#     -H "Authorization: Bearer ${CLOUDFLARE_API_KEY}"`
# echo -e "ID\tNAME\tTYPE\tCONTENT"
# echo $cloudflarednsrecords | jq -r '.result[] | [.id, .name, .type, .content] | @tsv'

#load environment variables
SCRIPT_DIR=$(dirname "$(realpath "${BASH_SOURCE[0]}")")
ENV_FILE="$SCRIPT_DIR/env-vars.env"
source "$ENV_FILE"

myip=`curl -s "https://api.ipify.org"`

cloudflarednsresult=`curl -s https://api.cloudflare.com/client/v4/zones/$ZONE_ID/dns_records/$DNS_RECORD_ID \
-H "Authorization: Bearer ${CLOUDFLARE_API_KEY}"`

cloudflareip=`echo $cloudflarednsresult | jq -r '.result.content'`

if [ "$myip" != "$cloudflareip" ]; then
    update_result=$(curl -s -X PUT "https://api.cloudflare.com/client/v4/zones/$ZONE_ID/dns_records/$DNS_RECORD_ID" \
    -H "Authorization: Bearer ${CLOUDFLARE_API_KEY}" \
    -H "Content-Type: application/json" \
    --data '{"type":"A","name":"'"$myhostname.$mydomain"'","content":"'"$myip"'","ttl":1,"proxied":false}')
    
    if echo "$update_result" | jq -e '.success' > /dev/null; then
        logger "DNS record updated successfully."
    else
        logger "Failed to update DNS record. result $update_result"
    fi
else 
    logger "IP address has not changed. No update required."
fi