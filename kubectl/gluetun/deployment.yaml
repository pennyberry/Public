---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: gluetun
    labels:
        app: gluetun
spec:
    strategy:
        type: Recreate
    selector:
        matchLabels:
            app: gluetun
    template:
        metadata:
            labels:
                app: gluetun
        spec:
            initContainers:
                - name: gluetun
                  restartPolicy: Always
                  image: qmcgaw/gluetun
                  imagePullPolicy: Always
                  lifecycle:
                    postStart:
                      exec:
                        command: ["/bin/sh", "-c", "(ip rule del table 51820; ip -6 rule del table 51820) || true"]
                  securityContext:
                      capabilities:
                          add:
                              - 'NET_ADMIN'
                  env:
                      - name: VPN_SERVICE_PROVIDER
                        value: protonvpn
                      - name: VPN_TYPE
                        value: wireguard
                      - name: SERVER_COUNTRIES
                        value: United States
                      - name: PORT_FORWARD_ONLY
                        value: on
                      - name: VPN_PORT_FORWARDING_PROVIDER
                        value: protonvpn
                      - name: VPN_PORT_FORWARDING
                        value: on
                      - name: DOT
                        value: off
                      - name: WIREGUARD_PRIVATE_KEY
                        valueFrom:
                            secretKeyRef:
                                name: gluetun-secrets
                                key: PRIVATEKEY
                - name: curlpodtest
                  image: alpine/curl
                  ports:
                    - containerPort: 80
                      hostPort: 88
                  command: ['/bin/sh', '-c']
                  args:
                      - &check-ip |
                          IP=$(nslookup 123.joeberry.org | awk '/^Address: / { print $2 }')
                          EXPECTED_IP=$(curl checkip.amazonaws.com)
                          if [ "$IP" != "$EXPECTED_IP" ]; then
                            echo "IP is different from $EXPECTED_IP. Current IP is $IP."
                          else
                            echo "IP is $EXPECTED_IP. Exiting..."
                            exit 1
                          fi
            containers:
                # Run whatever you want to ensure is going out the tunnel here
                - name: qbittorrent
                  image: qbittorrentofficial/qbittorrent-nox:latest
                  resources:
                    requests:
                      memory: "1Gi"
                      cpu: "100m"
                    limits:
                      memory: "2Gi"
                      cpu: "1000m"
                  env:
                    - name: PUID
                      value: "0"
                    - name: PGID
                      value: "0"
                    - name: WEBUI_PORT
                      value: "8080"
                  livenessProbe:
                    exec:
                      command:
                        - "wget -q -O - http://localhost:8080/api/v2/transfer/info | grep '\"connection_status\":\"connected\"' || exit 1"
                    periodSeconds: 90
                    initialDelaySeconds: 30
                  volumeMounts:
                    - mountPath: /config
                      name: nfs
                      subPath: applications/qbittorrent-nox/volumes/config
                    - mountPath: /downloads
                      name: nfs
                      subPath: applications/qbittorrent-nox/volumes/downloads
            volumes:
              - name: nfs
                persistentVolumeClaim:
                  claimName: truenas-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: gluetun
  annotations:
    metallb.io/address-pool: metallbaddresspool
    metallb.io/allow-shared-ip: "shared-ip"
spec:
  type: LoadBalancer
  selector:
    app: gluetun
  ports:
    - name: manage-http
      port: 8080
      targetPort: 8080

